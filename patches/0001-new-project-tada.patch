From 48e2d07db037982a0e1e6a0f8de6f5dddfe726c4 Mon Sep 17 00:00:00 2001
From: MisileLaboratory <icecreamhappytroll@gmail.com>
Date: Tue, 3 Jan 2023 03:30:14 +0000
Subject: [PATCH] new project+ :tada:

---
 projects/somemekanism/libs           |   1 +
 projects/somemekanism/main.py        |  69 ++++++++++++++
 projects/somemekanism/poetry.lock    | 137 +++++++++++++++++++++++++++
 projects/somemekanism/pyproject.toml |  16 ++++
 4 files changed, 223 insertions(+)
 create mode 120000 projects/somemekanism/libs
 create mode 100644 projects/somemekanism/main.py
 create mode 100644 projects/somemekanism/poetry.lock
 create mode 100644 projects/somemekanism/pyproject.toml

diff --git a/projects/somemekanism/libs b/projects/somemekanism/libs
new file mode 120000
index 0000000..195d8f0
--- /dev/null
+++ b/projects/somemekanism/libs
@@ -0,0 +1 @@
+../../libraries
\ No newline at end of file
diff --git a/projects/somemekanism/main.py b/projects/somemekanism/main.py
new file mode 100644
index 0000000..7981b02
--- /dev/null
+++ b/projects/somemekanism/main.py
@@ -0,0 +1,69 @@
+import platform
+from sys import version as pyversion
+from sys import exit
+from textual.app import App, ComposeResult
+from textual.containers import Container
+from textual.reactive import Reactive
+from textual.widgets import Button, Header, Static
+from misilelibpy import read_once
+
+_version = "0.0.1a"
+
+def linux_distribution():
+  try:
+    return platform.linux_distribution()
+  except Exception:
+    return ""
+
+def start():
+    pass
+
+def info():
+    pass
+
+def options():
+    pass
+
+class Display(Static):
+    """ae"""
+
+class InfoScreen(Static):
+    def on_button_pressed(self, event: Button.Pressed):
+        SomeMekanism().run()
+    
+    def compose(self) -> ComposeResult:
+        pversion = ','.join(pyversion.split('\n'))
+        infos = (
+            f"SomeMekanism {_version}",
+            f"Run with python {pversion}",
+            f"Run with {platform.system()} {linux_distribution()} {platform.machine()}"
+            f"Run with {platform.uname()}"
+        )
+        for i in infos:
+            yield Display(i)
+        yield Button("back")
+
+class Buttons(Static):
+    def on_button_pressed(self, event: Button.Pressed):
+        if event.button.id == "start":
+            start()
+        elif event.button.id == "info":
+            info()
+        elif event.button.id == "options":
+            options()
+        else:
+            exit()
+
+    def compose(self) -> ComposeResult:
+        yield Button("start", variant="success")
+        yield Button("info")
+        yield Button("options")
+        yield Button("exit", variant="error")
+
+class SomeMekanism(App):
+    def compose(self) -> ComposeResult:
+        yield Header()
+        yield Buttons()
+
+if __name__ == "__main__":
+    SomeMekanism().run()
\ No newline at end of file
diff --git a/projects/somemekanism/poetry.lock b/projects/somemekanism/poetry.lock
new file mode 100644
index 0000000..cc11757
--- /dev/null
+++ b/projects/somemekanism/poetry.lock
@@ -0,0 +1,137 @@
+# This file is automatically @generated by Poetry and should not be changed by hand.
+
+[[package]]
+name = "commonmark"
+version = "0.9.1"
+description = "Python parser for the CommonMark Markdown spec"
+category = "main"
+optional = false
+python-versions = "*"
+files = [
+    {file = "commonmark-0.9.1-py2.py3-none-any.whl", hash = "sha256:da2f38c92590f83de410ba1a3cbceafbc74fee9def35f9251ba9a971d6d66fd9"},
+    {file = "commonmark-0.9.1.tar.gz", hash = "sha256:452f9dc859be7f06631ddcb328b6919c67984aca654e5fefb3914d54691aed60"},
+]
+
+[package.extras]
+test = ["flake8 (==3.7.8)", "hypothesis (==3.55.3)"]
+
+[[package]]
+name = "importlib-metadata"
+version = "4.13.0"
+description = "Read metadata from Python packages"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+files = [
+    {file = "importlib_metadata-4.13.0-py3-none-any.whl", hash = "sha256:8a8a81bcf996e74fee46f0d16bd3eaa382a7eb20fd82445c3ad11f4090334116"},
+    {file = "importlib_metadata-4.13.0.tar.gz", hash = "sha256:dd0173e8f150d6815e098fd354f6414b0f079af4644ddfe90c71e2fc6174346d"},
+]
+
+[package.dependencies]
+zipp = ">=0.5"
+
+[package.extras]
+docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)"]
+perf = ["ipython"]
+testing = ["flake8 (<5)", "flufl.flake8", "importlib-resources (>=1.3)", "packaging", "pyfakefs", "pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-flake8", "pytest-mypy (>=0.9.1)", "pytest-perf (>=0.9.2)"]
+
+[[package]]
+name = "misilelibpy"
+version = "0.1.0"
+description = "MisileLib-Python"
+category = "main"
+optional = false
+python-versions = "3.11.1"
+files = []
+develop = false
+
+[package.source]
+type = "directory"
+url = "../../libraries/misilelib/misilelib-python"
+
+[[package]]
+name = "nanoid"
+version = "2.0.0"
+description = "A tiny, secure, URL-friendly, unique string ID generator for Python"
+category = "main"
+optional = false
+python-versions = "*"
+files = [
+    {file = "nanoid-2.0.0-py3-none-any.whl", hash = "sha256:90aefa650e328cffb0893bbd4c236cfd44c48bc1f2d0b525ecc53c3187b653bb"},
+    {file = "nanoid-2.0.0.tar.gz", hash = "sha256:5a80cad5e9c6e9ae3a41fa2fb34ae189f7cb420b2a5d8f82bd9d23466e4efa68"},
+]
+
+[[package]]
+name = "pygments"
+version = "2.14.0"
+description = "Pygments is a syntax highlighting package written in Python."
+category = "main"
+optional = false
+python-versions = ">=3.6"
+files = [
+    {file = "Pygments-2.14.0-py3-none-any.whl", hash = "sha256:fa7bd7bd2771287c0de303af8bfdfc731f51bd2c6a47ab69d117138893b82717"},
+    {file = "Pygments-2.14.0.tar.gz", hash = "sha256:b3ed06a9e8ac9a9aae5a6f5dbe78a8a58655d17b43b93c078f094ddc476ae297"},
+]
+
+[package.extras]
+plugins = ["importlib-metadata"]
+
+[[package]]
+name = "rich"
+version = "13.0.0"
+description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
+category = "main"
+optional = false
+python-versions = ">=3.7.0"
+files = [
+    {file = "rich-13.0.0-py3-none-any.whl", hash = "sha256:12b1d77ee7edf251b741531323f0d990f5f570a4e7c054d0bfb59fb7981ad977"},
+    {file = "rich-13.0.0.tar.gz", hash = "sha256:3aa9eba7219b8c575c6494446a59f702552efe1aa261e7eeb95548fa586e1950"},
+]
+
+[package.dependencies]
+commonmark = ">=0.9.0,<0.10.0"
+pygments = ">=2.6.0,<3.0.0"
+
+[package.extras]
+jupyter = ["ipywidgets (>=7.5.1,<8.0.0)"]
+
+[[package]]
+name = "textual"
+version = "0.9.1"
+description = "Modern Text User Interface framework"
+category = "main"
+optional = false
+python-versions = ">=3.7,<4.0"
+files = [
+    {file = "textual-0.9.1-py3-none-any.whl", hash = "sha256:97613f6855a10f82b1384346480c550324efed73f6d123b9064c277477eaa634"},
+    {file = "textual-0.9.1.tar.gz", hash = "sha256:117816bbea6ca4009317ca079caf9af7653d577c3f849b58da0f2580bed239d0"},
+]
+
+[package.dependencies]
+importlib-metadata = ">=4.11.3,<5.0.0"
+nanoid = ">=2.0.0"
+rich = ">12.6.0"
+
+[package.extras]
+dev = ["aiohttp (>=3.8.1)", "click (>=8.1.2)", "msgpack (>=1.0.3)"]
+
+[[package]]
+name = "zipp"
+version = "3.11.0"
+description = "Backport of pathlib-compatible object wrapper for zip files"
+category = "main"
+optional = false
+python-versions = ">=3.7"
+files = [
+    {file = "zipp-3.11.0-py3-none-any.whl", hash = "sha256:83a28fcb75844b5c0cdaf5aa4003c2d728c77e05f5aeabe8e95e56727005fbaa"},
+    {file = "zipp-3.11.0.tar.gz", hash = "sha256:a7a22e05929290a67401440b39690ae6563279bced5f314609d9d03798f56766"},
+]
+
+[package.extras]
+docs = ["furo", "jaraco.packaging (>=9)", "jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "sphinx (>=3.5)"]
+testing = ["flake8 (<5)", "func-timeout", "jaraco.functools", "jaraco.itertools", "more-itertools", "pytest (>=6)", "pytest-black (>=0.3.7)", "pytest-checkdocs (>=2.4)", "pytest-cov", "pytest-enabler (>=1.3)", "pytest-flake8", "pytest-mypy (>=0.9.1)"]
+
+[metadata]
+lock-version = "2.0"
+python-versions = "3.11.1"
+content-hash = "26f6c680ab6782b42b07cc9152f621d9098305f7e517a0486f0955f8b1b47eec"
diff --git a/projects/somemekanism/pyproject.toml b/projects/somemekanism/pyproject.toml
new file mode 100644
index 0000000..38b03f4
--- /dev/null
+++ b/projects/somemekanism/pyproject.toml
@@ -0,0 +1,16 @@
+[tool.poetry]
+name = "somemekanism"
+version = "0.1.0"
+description = "Mekanismly game"
+authors = ["MisileLaboratory"]
+license = "MisileLab License"
+readme = "README.md"
+
+[tool.poetry.dependencies]
+python = "3.11.1"
+misilelibpy = { path = "libs/misilelib/misilelib-python" }
+textual = "0.9.1"
+
+[build-system]
+requires = ["poetry-core"]
+build-backend = "poetry.core.masonry.api"
-- 
2.39.0

